apiVersion: v1
kind: Namespace
metadata:
  name: health-app-dev
  labels:
    app.kubernetes.io/name: health-app
    app.kubernetes.io/instance: health-app-dev
    app.kubernetes.io/managed-by: terraform
    environment: dev
    project: health-app
    team: devops-team
    cost-center: engineering
---
apiVersion: v1
kind: Namespace
metadata:
  name: health-app-test
  labels:
    app.kubernetes.io/name: health-app
    app.kubernetes.io/instance: health-app-test
    app.kubernetes.io/managed-by: terraform
    environment: test
    project: health-app
    team: devops-team
    cost-center: engineering
---
apiVersion: v1
kind: Namespace
metadata:
  name: health-app-prod
  labels:
    app.kubernetes.io/name: health-app
    app.kubernetes.io/instance: health-app-prod
    app.kubernetes.io/managed-by: terraform
    environment: prod
    project: health-app
    team: devops-team
    cost-center: engineering
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: health-api-config
  namespace: health-app-dev
data:
  DB_HOST: "healthapidb.cluster-xyz.ap-south-1.rds.amazonaws.com"
  DB_NAME: "healthapi"
  DB_USER: "healthapi_user"
  REDIS_HOST: "redis-service"
  ENVIRONMENT: "dev"
---
apiVersion: v1
kind: Secret
metadata:
  name: health-api-secrets
  namespace: health-app-dev
type: Opaque
data:
  DB_PASSWORD: aGVhbHRoYXBpX3Bhc3M=  # healthapi_pass
  JWT_SECRET: c3VwZXJfc2VjcmV0X2p3dF9rZXk=  # super_secret_jwt_key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-api-backend-dev
  namespace: health-app-dev
  labels:
    # Standard K8s labels
    app.kubernetes.io/name: health-api
    app.kubernetes.io/instance: health-api-dev
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: health-app
    app.kubernetes.io/managed-by: terraform
    # Custom labels
    app: health-api
    component: backend
    environment: dev
    project: health-app
    team: devops-team
    cost-center: engineering
spec:
  replicas: 2
  selector:
    matchLabels:
      app: health-api
      component: backend
      environment: dev
  template:
    metadata:
      labels:
        app: health-api
        component: backend
        environment: dev
        version: "1.0.0"
        project: health-app
        team: devops-team
    spec:
      containers:
      - name: health-api
        image: health-api:latest
        ports:
        - containerPort: 3000
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: health-api-config
              key: DB_HOST
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: health-api-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: health-api-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: health-api-secrets
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: health-api-secrets
              key: JWT_SECRET
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: health-api-config
              key: ENVIRONMENT
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: health-api-service
  namespace: health-app-dev
spec:
  selector:
    app: health-api
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: health-api-hpa
  namespace: health-app-dev
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: health-api
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80