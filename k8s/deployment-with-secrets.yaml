apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-api
  namespace: ${NAMESPACE}
  labels:
    app: health-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: health-api
  template:
    metadata:
      labels:
        app: health-api
    spec:
      containers:
      - name: health-api
        image: ${IMAGE}:${TAG}
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "${DB_HOST}"
        - name: DB_PORT
          value: "${DB_PORT}"
        - name: DB_NAME
          value: "${DB_NAME}"
        - name: DB_USER
          value: "${DB_USER}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-credentials
              key: db-password
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: app-credentials
              key: api-key
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-credentials
              key: jwt-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-region
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: health-api-service
  namespace: ${NAMESPACE}
spec:
  selector:
    app: health-api
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP