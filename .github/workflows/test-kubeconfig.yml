name: Test Kubeconfig Access

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to test'
        required: true
        default: 'lower'
        type: choice
        options:
          - lower
          - higher
          - monitoring

jobs:
  test-kubeconfig:
    runs-on: [self-hosted, github-runner-lower]
    
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      
      - name: Check Infrastructure Status
        run: |
          echo "üîç Checking if cluster infrastructure is running..."
          bash scripts/check-cluster-status.sh
      
      - name: Test Kubeconfig Access
        run: |
          echo "üîß Testing kubeconfig access for ${{ github.event.inputs.network }} network"
          
          # Use clean kubeconfig
          export KUBECONFIG=${{ github.workspace }}/scripts/kubeconfig/kubeconfig-clean.yaml
          
          # Test cluster access
          echo "üìã Testing cluster connection..."
          kubectl cluster-info || echo "Cluster not reachable - checking secrets..."
          
          # Test kubeconfig secrets
          echo "üîê Testing kubeconfig secrets..."
          NAMESPACE="health-app-${{ github.event.inputs.network == 'lower' && 'dev' || github.event.inputs.network == 'higher' && 'prod' || 'test' }}"
          
          if kubectl get secret kubeconfig-${{ github.event.inputs.network == 'lower' && 'dev' || github.event.inputs.network == 'higher' && 'prod' || 'test' }} -n $NAMESPACE; then
            echo "‚úÖ Kubeconfig secret exists in $NAMESPACE"
            
            # Extract and test kubeconfig from secret
            kubectl get secret kubeconfig-${{ github.event.inputs.network == 'lower' && 'dev' || github.event.inputs.network == 'higher' && 'prod' || 'test' }} -n $NAMESPACE -o jsonpath='{.data.config}' | base64 -d > /tmp/secret-kubeconfig
            export KUBECONFIG=/tmp/secret-kubeconfig
            
            echo "üìã Testing with secret kubeconfig..."
            kubectl get nodes || echo "Cluster not accessible"
            kubectl get namespaces || echo "Cannot list namespaces"
            
            rm -f /tmp/secret-kubeconfig
          else
            echo "‚ö†Ô∏è Kubeconfig secret not found in $NAMESPACE"
          fi
          
          echo "‚úÖ Test completed!"