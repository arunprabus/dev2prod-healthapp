name: Core Deployment

on:
  repository_dispatch:
    types: [app-deploy]
  workflow_dispatch:
    inputs:
      app:
        description: 'Application'
        required: true
        default: 'health-api'
        type: string
      image:
        description: 'Container image'
        required: true
        default: 'arunprabusiva/health-api:latest'
        type: string
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - test
        - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Download kubeconfig
      run: |
        ENV="${{ github.event.client_payload.environment || github.event.inputs.environment || 'dev' }}"
        
        case $ENV in
          "dev"|"test") S3_PATH="kubeconfig/lower-network.yaml" ;;
          "prod") S3_PATH="kubeconfig/higher-network.yaml" ;;
          *) S3_PATH="kubeconfig/lower-network.yaml" ;;
        esac
        
        mkdir -p ~/.kube
        aws s3 cp s3://${{ secrets.TF_STATE_BUCKET }}/$S3_PATH ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Verify connection
      run: kubectl get nodes

    - name: Deploy application
      run: |
        APP="${{ github.event.client_payload.app || github.event.inputs.app }}"
        IMAGE="${{ github.event.client_payload.image || github.event.inputs.image }}"
        ENV="${{ github.event.client_payload.environment || github.event.inputs.environment }}"
        NAMESPACE="health-app-${ENV}"
        
        kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
        
        if kubectl get deployment $APP -n $NAMESPACE >/dev/null 2>&1; then
          kubectl set image deployment/$APP $APP=$IMAGE -n $NAMESPACE
        else
          kubectl create deployment $APP --image=$IMAGE -n $NAMESPACE
          kubectl expose deployment $APP --port=80 --target-port=8080 -n $NAMESPACE
        fi
        
        kubectl rollout status deployment/$APP -n $NAMESPACE --timeout=300s

    - name: Verify deployment
      run: |
        APP="${{ github.event.client_payload.app || github.event.inputs.app }}"
        ENV="${{ github.event.client_payload.environment || github.event.inputs.environment }}"
        NAMESPACE="health-app-${ENV}"
        
        kubectl get pods -l app=$APP -n $NAMESPACE
        kubectl get services -l app=$APP -n $NAMESPACE