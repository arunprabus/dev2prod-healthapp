name: Deploy to K3s

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - test
        - prod

env:
  AWS_REGION: ap-south-1
  K3S_CLUSTER_NAME: health-app-cluster
  TERRAFORM_VERSION: 1.6.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy to Kubernetes
      run: |
        ENV=${{ github.event.inputs.environment }}
        
        # Update image tags
        sed -i "s|ghcr.io/arunprabus/health-api:latest|ghcr.io/arunprabus/health-api:${ENV}|g" k8s/health-api-deployment.yaml
        sed -i "s|ghcr.io/arunprabus/frontend-config-app:latest|ghcr.io/arunprabus/frontend-config-app:${ENV}|g" k8s/frontend-deployment.yaml
        
        # Apply deployments
        kubectl apply -f k8s/health-api-deployment.yaml
        kubectl apply -f k8s/frontend-deployment.yaml

    - name: Wait for deployment
      run: |
        kubectl rollout status deployment/health-api --timeout=300s
        kubectl rollout status deployment/frontend --timeout=300s

    - name: Get service status
      run: |
        echo "Health API Service:"
        kubectl get service health-api-service || echo "Service not found"
        echo "Frontend Service:"
        kubectl get service frontend-service || echo "Service not found"