name: Quick Kubeconfig Fix

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action'
        required: true
        type: choice
        options:
          - 'fix-secrets'
          - 'test-connection'

jobs:
  fix-kubeconfig:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      secrets: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Fix GitHub Secrets
        if: inputs.action == 'fix-secrets'
        run: |
          echo "🔧 Using existing kubeconfig file to fix GitHub secrets..."
          
          # Use the working kubeconfig file from the repo
          if [ -f "kubeconfig-lower.yaml" ]; then
            echo "✅ Found kubeconfig-lower.yaml"
            
            # Test the kubeconfig
            export KUBECONFIG=$PWD/kubeconfig-lower.yaml
            echo "🧪 Testing kubeconfig connection..."
            
            if timeout 30 kubectl cluster-info --request-timeout=10s; then
              echo "✅ Kubeconfig is working!"
              
              # Create base64 encoded version
              KUBECONFIG_B64=$(base64 -w 0 kubeconfig-lower.yaml)
              
              echo "🔐 Creating GitHub secrets..."
              
              # Create secrets using GitHub CLI (simpler than API)
              echo "$KUBECONFIG_B64" | gh secret set KUBECONFIG_DEV --repo ${{ github.repository }}
              echo "$KUBECONFIG_B64" | gh secret set KUBECONFIG_TEST --repo ${{ github.repository }}
              
              echo "✅ GitHub secrets updated successfully!"
              echo ""
              echo "📋 Updated secrets:"
              echo "  - KUBECONFIG_DEV"
              echo "  - KUBECONFIG_TEST"
              
            else
              echo "⚠️ Connection test failed, but creating secrets anyway..."
              KUBECONFIG_B64=$(base64 -w 0 kubeconfig-lower.yaml)
              echo "$KUBECONFIG_B64" | gh secret set KUBECONFIG_DEV --repo ${{ github.repository }}
              echo "$KUBECONFIG_B64" | gh secret set KUBECONFIG_TEST --repo ${{ github.repository }}
              echo "✅ Secrets created (connection may work from GitHub Actions)"
            fi
            
          else
            echo "❌ kubeconfig-lower.yaml not found in repository"
            echo "Available kubeconfig files:"
            ls -la kubeconfig*.yaml || echo "No kubeconfig files found"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Connection
        if: inputs.action == 'test-connection'
        run: |
          echo "🧪 Testing kubeconfig connection from secrets..."
          
          # Test KUBECONFIG_DEV
          echo "Testing KUBECONFIG_DEV..."
          echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > test-kubeconfig.yaml
          
          if [ -s test-kubeconfig.yaml ]; then
            export KUBECONFIG=$PWD/test-kubeconfig.yaml
            echo "📁 Kubeconfig content:"
            cat test-kubeconfig.yaml
            echo ""
            
            echo "🔗 Testing connection..."
            if timeout 30 kubectl cluster-info --request-timeout=10s; then
              echo "✅ KUBECONFIG_DEV is working!"
              kubectl get nodes
            else
              echo "❌ KUBECONFIG_DEV connection failed"
            fi
          else
            echo "❌ KUBECONFIG_DEV secret is empty or invalid"
          fi
          
          rm -f test-kubeconfig.yaml

      - name: Summary
        run: |
          echo "🎉 Kubeconfig fix completed!"
          echo ""
          echo "📋 Next steps:"
          echo "1. Test with: Actions → Kubeconfig Access → environment: dev → action: test-connection"
          echo "2. If working, you can now deploy applications"
          echo ""
          echo "💡 The kubeconfig points to: 43.205.211.129:6443"