name: Manual Rollback

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to rollback'
        required: true
        default: 'prod'
        type: choice
        options:
        - dev
        - test
        - prod
      target_color:
        description: 'Target Deployment Color'
        required: true
        default: 'blue'
        type: choice
        options:
        - blue
        - green

env:
  AWS_REGION: ap-south-1
  EKS_CLUSTER_NAME: health-app-cluster

jobs:
  rollback:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig \
          --region ${{ env.AWS_REGION }} \
          --name ${{ env.EKS_CLUSTER_NAME }}-${{ github.event.inputs.environment }}

    - name: Get current deployment color
      id: current-color
      run: |
        CURRENT_COLOR=$(kubectl get service health-api-service -n health-app-${{ github.event.inputs.environment }} -o jsonpath='{.spec.selector.color}' 2>/dev/null || echo "unknown")
        echo "current_color=$CURRENT_COLOR" >> $GITHUB_OUTPUT
        echo "Current deployment color: $CURRENT_COLOR"

    - name: Perform rollback
      run: |
        echo "Rolling back to ${{ github.event.inputs.target_color }} deployment..."

        # Update health-api service
        kubectl patch service health-api-service -n health-app-${{ github.event.inputs.environment }} \
          -p '{"spec":{"selector":{"color":"${{ github.event.inputs.target_color }}"}}}'

        # Update frontend service if it exists
        if kubectl get service frontend-service -n health-app-${{ github.event.inputs.environment }} &>/dev/null; then
          kubectl patch service frontend-service -n health-app-${{ github.event.inputs.environment }} \
            -p '{"spec":{"selector":{"color":"${{ github.event.inputs.target_color }}"}}}'
        fi

    - name: Verify rollback
      run: |
        echo "Waiting for pods to be ready..."
        kubectl wait --for=condition=ready pods -l app=health-api,color=${{ github.event.inputs.target_color }} \
          -n health-app-${{ github.event.inputs.environment }} --timeout=60s || true

        echo "Pod status:"
        kubectl get pods -l app=health-api,color=${{ github.event.inputs.target_color }} \
          -n health-app-${{ github.event.inputs.environment }}

    - name: Rollback summary
      run: |
        echo "## Rollback Summary" >> $GITHUB_STEP_SUMMARY
        echo "* Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "* Previous color: ${{ steps.current-color.outputs.current_color }}" >> $GITHUB_STEP_SUMMARY
        echo "* New color: ${{ github.event.inputs.target_color }}" >> $GITHUB_STEP_SUMMARY
        echo "* Rollback triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY