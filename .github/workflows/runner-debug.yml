name: Runner Debug & Logs

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to debug'
        required: true
        default: 'lower'
        type: choice
        options:
        - lower
        - higher
        - monitoring
      action:
        description: 'Debug action'
        required: true
        default: 'check-logs'
        type: choice
        options:
        - check-logs
        - restart-runner
        - test-connectivity
        - full-debug

env:
  AWS_REGION: ap-south-1

jobs:
  debug-runner:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0

    - name: Get Runner IP
      id: get-ip
      working-directory: infra/two-network-setup
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=health-app-${{ github.event.inputs.environment }}.tfstate" \
          -backend-config="region=$AWS_REGION"
        
        RUNNER_IP=$(terraform output -raw github_runner_public_ip 2>/dev/null || echo "")
        if [ -z "$RUNNER_IP" ]; then
          echo "‚ùå Could not get runner IP. Infrastructure may not be deployed."
          exit 1
        fi
        
        echo "runner_ip=$RUNNER_IP" >> $GITHUB_OUTPUT
        echo "üîç Runner IP: $RUNNER_IP"

    - name: Test SSH Connection
      run: |
        echo "üîê Testing SSH connection to runner..."
        
        # Create SSH key file
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_key
        chmod 600 /tmp/ssh_key
        
        # Test SSH connection
        if ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no -o ConnectTimeout=10 ubuntu@${{ steps.get-ip.outputs.runner_ip }} "echo 'SSH connection successful'"; then
          echo "‚úÖ SSH connection: OK"
        else
          echo "‚ùå SSH connection: FAILED"
          echo "Runner may still be starting up or there's a network issue"
          exit 1
        fi

    - name: Check Runner Logs
      if: github.event.inputs.action == 'check-logs' || github.event.inputs.action == 'full-debug'
      run: |
        echo "üìã Checking runner logs..."
        
        ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no ubuntu@${{ steps.get-ip.outputs.runner_ip }} << 'EOF'
        echo "=== Runner Configuration Log ==="
        if [ -f /var/log/runner-config.log ]; then
          cat /var/log/runner-config.log
        else
          echo "No runner config log found"
        fi
        
        echo ""
        echo "=== Runner Service Status ==="
        systemctl status actions.runner.* --no-pager || echo "No runner service found"
        
        echo ""
        echo "=== Runner Service Logs (last 20 lines) ==="
        journalctl -u actions.runner.* --no-pager -n 20 || echo "No runner service logs"
        
        echo ""
        echo "=== Cloud-init Log (last 30 lines) ==="
        sudo tail -30 /var/log/cloud-init-output.log
        EOF

    - name: Test Connectivity
      if: github.event.inputs.action == 'test-connectivity' || github.event.inputs.action == 'full-debug'
      run: |
        echo "üåê Testing runner connectivity..."
        
        ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no ubuntu@${{ steps.get-ip.outputs.runner_ip }} << 'EOF'
        echo "=== Internet Connectivity ==="
        if ping -c 3 8.8.8.8 > /dev/null 2>&1; then
          echo "‚úÖ Internet: OK"
        else
          echo "‚ùå Internet: FAILED"
        fi
        
        echo ""
        echo "=== GitHub API Connectivity ==="
        if curl -s --connect-timeout 10 https://api.github.com/rate_limit > /dev/null; then
          echo "‚úÖ GitHub API: OK"
        else
          echo "‚ùå GitHub API: FAILED"
        fi
        
        echo ""
        echo "=== DNS Resolution ==="
        if nslookup github.com > /dev/null 2>&1; then
          echo "‚úÖ DNS: OK"
        else
          echo "‚ùå DNS: FAILED"
        fi
        
        echo ""
        echo "=== Network Info ==="
        echo "Public IP: $(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
        echo "Private IP: $(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)"
        EOF

    - name: Restart Runner Service
      if: github.event.inputs.action == 'restart-runner'
      run: |
        echo "üîÑ Restarting runner service..."
        
        ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no ubuntu@${{ steps.get-ip.outputs.runner_ip }} << 'EOF'
        echo "Stopping runner service..."
        cd /home/ubuntu/actions-runner
        sudo ./svc.sh stop || echo "Service was not running"
        
        echo "Starting runner service..."
        sudo ./svc.sh start
        
        echo "Waiting 10 seconds..."
        sleep 10
        
        echo "Checking service status..."
        systemctl status actions.runner.* --no-pager
        EOF

    - name: Full Debug Report
      if: github.event.inputs.action == 'full-debug'
      run: |
        echo "üîç Running full debug report..."
        
        ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no ubuntu@${{ steps.get-ip.outputs.runner_ip }} << 'EOF'
        echo "=== System Info ==="
        echo "Hostname: $(hostname)"
        echo "Uptime: $(uptime)"
        echo "Date: $(date)"
        
        echo ""
        echo "=== Runner Directory ==="
        ls -la /home/ubuntu/actions-runner/ || echo "Runner directory not found"
        
        echo ""
        echo "=== Installed Software ==="
        terraform version 2>/dev/null || echo "Terraform not installed"
        kubectl version --client 2>/dev/null || echo "kubectl not installed"
        aws --version 2>/dev/null || echo "AWS CLI not installed"
        docker --version 2>/dev/null || echo "Docker not installed"
        
        echo ""
        echo "=== Process List ==="
        ps aux | grep -E "(runner|actions)" | grep -v grep || echo "No runner processes found"
        
        echo ""
        echo "=== API Test Log ==="
        cat /tmp/api_test.log 2>/dev/null || echo "No API test log found"
        EOF

    - name: Cleanup
      if: always()
      run: |
        rm -f /tmp/ssh_key

    - name: Summary
      if: always()
      run: |
        echo "## üîç Runner Debug Summary" >> $GITHUB_STEP_SUMMARY
        echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
        echo "**Action:** ${{ github.event.inputs.action }}" >> $GITHUB_STEP_SUMMARY
        echo "**Runner IP:** ${{ steps.get-ip.outputs.runner_ip }}" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìã Manual SSH Command:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "ssh -i ~/.ssh/your-key ubuntu@${{ steps.get-ip.outputs.runner_ip }}" >> $GITHUB_STEP_SUMMARY
        echo "sudo /home/ubuntu/debug-runner.sh" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY