name: Kubeconfig Access

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - 'dev'
          - 'test'
          - 'prod'
          - 'monitoring'
      action:
        description: 'Action'
        required: true
        type: choice
        options:
          - 'download'
          - 'test-connection'
          - 'get-nodes'
          - 'get-pods'

jobs:
  kubeconfig-access:
    runs-on: ubuntu-latest
    steps:
      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Setup Kubeconfig
        run: |
          case "${{ inputs.environment }}" in
            "dev")
              echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > kubeconfig.yaml
              ;;
            "test")
              echo "${{ secrets.KUBECONFIG_TEST }}" | base64 -d > kubeconfig.yaml
              ;;
            "prod")
              echo "${{ secrets.KUBECONFIG_PROD }}" | base64 -d > kubeconfig.yaml
              ;;
            "monitoring")
              echo "${{ secrets.KUBECONFIG_MONITORING }}" | base64 -d > kubeconfig.yaml
              ;;
          esac
          
          export KUBECONFIG=$PWD/kubeconfig.yaml
          echo "KUBECONFIG=$PWD/kubeconfig.yaml" >> $GITHUB_ENV

      - name: Execute Action
        run: |
          case "${{ inputs.action }}" in
            "download")
              echo "📁 Kubeconfig for ${{ inputs.environment }}:"
              echo "```yaml"
              cat kubeconfig.yaml
              echo "```"
              ;;
            "test-connection")
              echo "🧪 Testing connection to ${{ inputs.environment }}..."
              kubectl cluster-info
              ;;
            "get-nodes")
              echo "🖥️ Nodes in ${{ inputs.environment }}:"
              kubectl get nodes -o wide
              ;;
            "get-pods")
              echo "🐳 Pods in ${{ inputs.environment }}:"
              kubectl get pods -A
              ;;
          esac