name: AWS Budget Setup

on:
  workflow_dispatch:
    inputs:
      email:
        description: 'Email for budget alerts (leave empty to use GitHub variable)'
        required: false
        type: string
      regions:
        description: 'Regions to monitor (leave empty to use GitHub variable)'
        required: false
        type: string

env:
  AWS_REGION: us-east-1

jobs:
  setup-budgets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get AWS Account ID
      id: account
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        echo "account_id=$ACCOUNT_ID" >> $GITHUB_OUTPUT
        echo "üè¶ Account ID: $ACCOUNT_ID"

    - name: Setup Regional Budgets
      run: |
        # Use input or GitHub variable for email and regions
        EMAIL="${{ github.event.inputs.email || vars.BUDGET_EMAIL || 'admin@example.com' }}"
        REGIONS_INPUT="${{ github.event.inputs.regions || vars.BUDGET_REGIONS || 'us-east-1,ap-south-1' }}"
        
        echo "üìß Using email: $EMAIL"
        echo "üåç Using regions: $REGIONS_INPUT"
        
        IFS=',' read -ra REGIONS <<< "$REGIONS_INPUT"
        
        for region in "${REGIONS[@]}"; do
          echo "üõ°Ô∏è Creating budget for region: $region"
          
          aws budgets create-budget \
            --account-id ${{ steps.account.outputs.account_id }} \
            --budget "{
              \"BudgetName\": \"ZeroCost-${region}-Alert\",
              \"BudgetLimit\": {
                \"Amount\": \"1.00\",
                \"Unit\": \"USD\"
              },
              \"TimeUnit\": \"MONTHLY\",
              \"BudgetType\": \"COST\",
              \"CostFilters\": {
                \"Region\": [\"$region\"]
              }
            }" \
            --notifications-with-subscribers "[
              {
                \"Notification\": {
                  \"NotificationType\": \"ACTUAL\",
                  \"ComparisonOperator\": \"GREATER_THAN\",
                  \"Threshold\": 0.01,
                  \"ThresholdType\": \"PERCENTAGE\"
                },
                \"Subscribers\": [
                  {
                    \"SubscriptionType\": \"EMAIL\",
                    \"Address\": \"${{ github.event.inputs.email }}\"
                  }
                ]
              },
              {
                \"Notification\": {
                  \"NotificationType\": \"FORECASTED\",
                  \"ComparisonOperator\": \"GREATER_THAN\",
                  \"Threshold\": 80,
                  \"ThresholdType\": \"PERCENTAGE\"
                },
                \"Subscribers\": [
                  {
                    \"SubscriptionType\": \"EMAIL\",
                    \"Address\": \"${{ github.event.inputs.email }}\"
                  }
                ]
              }
            ]" || echo "‚ö†Ô∏è Budget for $region may already exist"
        done

    - name: Setup Overall Account Budget
      run: |
        echo "üõ°Ô∏è Creating overall account budget..."
        
        aws budgets create-budget \
          --account-id ${{ steps.account.outputs.account_id }} \
          --budget '{
            "BudgetName": "ZeroCost-Overall-Alert",
            "BudgetLimit": {
              "Amount": "5.00",
              "Unit": "USD"
            },
            "TimeUnit": "MONTHLY",
            "BudgetType": "COST"
          }' \
          --notifications-with-subscribers "[
            {
              \"Notification\": {
                \"NotificationType\": \"ACTUAL\",
                \"ComparisonOperator\": \"GREATER_THAN\",
                \"Threshold\": 0.01,
                \"ThresholdType\": \"PERCENTAGE\"
              },
              \"Subscribers\": [
                {
                  \"SubscriptionType\": \"EMAIL\",
                  \"Address\": \"$EMAIL\"
                }
              ]
            }
          ]" || echo "‚ö†Ô∏è Overall budget may already exist"

    - name: Verify Budget Setup
      run: |
        echo "üîç Listing all budgets..."
        aws budgets describe-budgets --account-id ${{ steps.account.outputs.account_id }} --query 'Budgets[].BudgetName' --output table

    - name: Budget Setup Summary
      run: |
        echo "## üõ°Ô∏è Budget Setup Complete" >> $GITHUB_STEP_SUMMARY
        echo "* Account ID: ${{ steps.account.outputs.account_id }}" >> $GITHUB_STEP_SUMMARY
        echo "* Email: ${{ github.event.inputs.email || vars.BUDGET_EMAIL || 'admin@example.com' }}" >> $GITHUB_STEP_SUMMARY
        echo "* Regions: ${{ github.event.inputs.regions || vars.BUDGET_REGIONS || 'us-east-1,ap-south-1' }}" >> $GITHUB_STEP_SUMMARY
        echo "* Triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìß Alert Triggers:" >> $GITHUB_STEP_SUMMARY
        echo "- **Immediate alert** when cost > \$0.01 in any region" >> $GITHUB_STEP_SUMMARY
        echo "- **Forecast alert** when projected to exceed 80% of budget" >> $GITHUB_STEP_SUMMARY
        echo "- **Overall account** alert when total > \$0.05" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üîç **View budgets**: https://console.aws.amazon.com/billing/home#/budgets" >> $GITHUB_STEP_SUMMARY