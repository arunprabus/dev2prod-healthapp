name: K8s Operations

on:
  schedule:
    - cron: '0 */2 * * *'  # Every 2 hours
  workflow_dispatch:
    inputs:
      action:
        description: 'K8s Action'
        required: true
        type: choice
        options:
        - health-check
        - scale-up
        - scale-down
        - auto-scale
        - restart-deployment
      namespace:
        description: 'Target Namespace'
        required: true
        default: 'health-app-dev'
        type: choice
        options:
        - health-app-dev
        - health-app-test
        - health-app-prod
        - monitoring
      deployment:
        description: 'Deployment Name'
        required: false
        default: 'health-api'
        type: string

env:
  AWS_REGION: ap-south-1

jobs:
  k8s-operations:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Health Check
      if: github.event.inputs.action == 'health-check' || github.event.schedule == '0 */2 * * *'
      run: |
        chmod +x scripts/k8s-health-check.sh
        ./scripts/k8s-health-check.sh ${{ github.event.inputs.namespace || 'health-app-dev' }}

    - name: Scale Operations
      if: contains(fromJson('["scale-up", "scale-down", "auto-scale"]'), github.event.inputs.action)
      run: |
        chmod +x scripts/k8s-auto-scale.sh
        ./scripts/k8s-auto-scale.sh ${{ github.event.inputs.action }} ${{ github.event.inputs.namespace }} ${{ github.event.inputs.deployment }}

    - name: Restart Deployment
      if: github.event.inputs.action == 'restart-deployment'
      run: |
        kubectl rollout restart deployment/${{ github.event.inputs.deployment }} -n ${{ github.event.inputs.namespace }}
        kubectl rollout status deployment/${{ github.event.inputs.deployment }} -n ${{ github.event.inputs.namespace }} --timeout=300s

    - name: Upload Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: k8s-operations-logs-${{ github.run_number }}
        path: "*.log"
        retention-days: 7

    - name: Generate Summary
      if: always()
      run: |
        echo "## 🚀 K8s Operations Summary" >> $GITHUB_STEP_SUMMARY
        echo "* Action: ${{ github.event.inputs.action || 'scheduled-health-check' }}" >> $GITHUB_STEP_SUMMARY
        echo "* Namespace: ${{ github.event.inputs.namespace || 'health-app-dev' }}" >> $GITHUB_STEP_SUMMARY
        echo "* Deployment: ${{ github.event.inputs.deployment || 'health-api' }}" >> $GITHUB_STEP_SUMMARY
        echo "* Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "* Date: $(date)" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "k8s-health-*.log" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏥 Health Check Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -10 k8s-health-*.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi