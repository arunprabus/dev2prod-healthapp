name: Infrastructure Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - test
        - prod
        - all
      
env:
  AWS_REGION: ap-south-1
  TF_VERSION: 1.6.0

jobs:
  terraform-single:
    if: github.event.inputs.environment != 'all'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: ./infra
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=health-app-${{ github.event.inputs.environment }}.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      working-directory: ./infra
      run: terraform plan -var-file="environments/${{ github.event.inputs.environment }}.tfvars"

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      working-directory: ./infra
      run: terraform apply -var-file="environments/${{ github.event.inputs.environment }}.tfvars" -auto-approve

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      working-directory: ./infra
      run: terraform destroy -var-file="environments/${{ github.event.inputs.environment }}.tfvars" -auto-approve

  terraform-all:
    if: github.event.inputs.environment == 'all'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, test, prod]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: ./infra
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=health-app-${{ matrix.environment }}.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      working-directory: ./infra
      run: terraform plan -var-file="environments/${{ matrix.environment }}.tfvars"

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      working-directory: ./infra
      run: terraform apply -var-file="environments/${{ matrix.environment }}.tfvars" -auto-approve

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      working-directory: ./infra
      run: terraform destroy -var-file="environments/${{ matrix.environment }}.tfvars" -auto-approve