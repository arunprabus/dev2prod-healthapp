apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-api-backend-${ENVIRONMENT}
  namespace: health-app-${ENVIRONMENT}
  labels:
    # Standard K8s labels
    app.kubernetes.io/name: health-api
    app.kubernetes.io/instance: health-api-${ENVIRONMENT}
    app.kubernetes.io/version: "${VERSION}"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: health-app
    app.kubernetes.io/managed-by: terraform
    # Custom labels
    app: health-api
    component: backend
    environment: ${ENVIRONMENT}
    project: health-app
    team: devops-team
    cost-center: engineering
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: health-api
      component: backend
      environment: ${ENVIRONMENT}
  template:
    metadata:
      labels:
        app: health-api
        component: backend
        environment: ${ENVIRONMENT}
        version: "${VERSION}"
        project: health-app
        team: devops-team
    spec:
      containers:
      - name: health-api
        image: ${IMAGE}:${TAG}
        ports:
        - containerPort: 3000
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: health-api-ssm-secrets
              key: db-host
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: health-api-ssm-secrets
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: health-api-ssm-secrets
              key: db-user
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: health-api-config
              key: AWS_REGION
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: health-api-secrets
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: health-api-secrets
              key: JWT_SECRET
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: health-api-config
              key: ENVIRONMENT
        resources:
          requests:
            memory: "${MEMORY_REQUEST}"
            cpu: "${CPU_REQUEST}"
          limits:
            memory: "${MEMORY_LIMIT}"
            cpu: "${CPU_LIMIT}"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5